intcode:{[a;input]
    output:();
    ip:0;
    tp:0;
    run:1b;
    while[run;
        op:a[ip] mod 100;
        argc:(1 2 3 4 5 6 7 8 99!3 3 1 1 2 2 3 3 0)op;
        //-1 string[ip],": "," "sv string a[ip+til 1+argc];
        if[null argc; '"invalid op ",string[op]];
        argm:argc#(a[ip] div 100 1000 10000)mod 10;
        argv0:a[ip+1+til argc];
        argv:?[argm=1;argv0;a argv0];
        $[op=1; [a[argv0 2]:argv[0]+argv[1]; ip+:1+argc];
          op=2; [a[argv0 2]:argv[0]*argv[1]; ip+:1+argc];
          op=3; [a[argv0 0]:input[tp]; tp+:1; ip+:1+argc];
          op=4; [output,:argv 0; ip+:1+argc];
          op=5; $[argv[0]<>0; ip:argv 1; ip+:1+argc];
          op=6; $[argv[0]=0; ip:argv 1; ip+:1+argc];
          op=7; [a[argv0 2]:0+argv[0]<argv[1]; ip+:1+argc];
          op=8; [a[argv0 2]:0+argv[0]=argv[1]; ip+:1+argc];
          op=99; run:0b;
          '"invalid op"
        ];
    ];
    output};
d5p1:{a:"J"$","vs x; intcode[a;enlist 1]};
d5p2:{a:"J"$","vs x; intcode[a;enlist 5]};

d5p1whitebox:{a:"J"$","vs x;
    {y+8*x}/[raze(a -5 -6+/:ind where 223 224~/:asc each a(ind:where a=223)-\:1 2)except\:224]};

d5p2whitebox:{a:"J"$","vs x;
    t:enlist[`long$()]!enlist 0N;
    t[7 226 226]:0;t[7 226 677]:0;t[7 677 226]:1;t[7 677 677]:0;t[107 226 226]:1;t[107 226 677]:0;t[107 677 226]:0;t[107 677 677]:0;
    t[1007 226 226]:0;t[1007 226 677]:0;t[1007 677 226]:0;t[1007 677 677]:1;t[1107 226 226]:0;t[1107 226 677]:1;t[1107 677 226]:0;t[1107 677 677]:0;
    t[8 226 226]:1;t[8 226 677]:0;t[8 677 226]:0;t[8 677 677]:1;t[108 226 226]:0;t[108 226 677]:1;t[108 677 226]:1;t[108 677 677]:0;
    t[1008 226 226]:0;t[1008 226 677]:1;t[1008 677 226]:1;t[1008 677 677]:0;t[1108 226 226]:1;t[1108 226 677]:0;t[1108 677 226]:0;t[1108 677 677]:1;
    ind2:ind where all each (a(ind:where a=224)-\:1 2) in 226 677;
    {y+2*x}/[(t a -3 -2 -1+/:ind2)<>(1005=a 5+ind2)]};

.d5.test:{
    x:"3,225,1,225,6,6,1100,1,238,225,104,0,1002,43,69,224,101,-483,224,224,4,224,1002,223,8,223,1001,224,5,224,1,224,223,223,1101,67,60,225,1102,5,59,225,1101,7,16,225,1102,49,72,225,101,93,39,224,101,-98,224,224,4,224,102,8,223,223,1001,224,6,224,1,224,223,223,1102,35,82,225,2,166,36,224,101,-4260,224,224,4,224,102,8,223,223,101,5,224,224,1,223,224,223,102,66,48,224,1001,224,-4752,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1001,73,20,224,1001,224,-55,224,4,224,102,8,223,223,101,7,224,224,1,223,224,223,1102,18,41,224,1001,224,-738,224,4,224,102,8,223,223,101,6,224,224,1,224,223,223,1101,68,71,225,1102,5,66,225,1101,27,5,225,1101,54,63,224,1001,224,-117,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1,170,174,224,101,-71,224,224,4,224,1002,223,8,223,1001,224,4,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1007,226,226,224,1002,223,2,223,1006,224,329,1001,223,1,223,1007,226,677,224,102,2,223,223,1006,224,344,1001,223,1,223,108,677,677,224,102,2,223,223,1005,224,359,1001,223,1,223,1007,677,677,224,1002,223,2,223,1006,224,374,101,1,223,223,8,677,226,224,1002,223,2,223,1006,224,389,101,1,223,223,7,226,226,224,1002,223,2,223,1005,224,404,101,1,223,223,7,677,226,224,102,2,223,223,1005,224,419,1001,223,1,223,8,226,677,224,1002,223,2,223,1005,224,434,101,1,223,223,1008,226,677,224,102,2,223,223,1006,224,449,1001,223,1,223,7,226,677,224,1002,223,2,223,1006,224,464,1001,223,1,223,108,677,226,224,102,2,223,223,1005,224,479,101,1,223,223,108,226,226,224,1002,223,2,223,1006,224,494,101,1,223,223,8,226,226,224,1002,223,2,223,1005,224,509,1001,223,1,223,1107,677,226,224,102,2,223,223,1005,224,524,1001,223,1,223,1107,226,226,224,102,2,223,223,1005,224,539,1001,223,1,223,1108,677,677,224,1002,223,2,223,1006,224,554,101,1,223,223,107,226,677,224,102,2,223,223,1005,224,569,1001,223,1,223,1108,226,677,224,1002,223,2,223,1005,224,584,1001,223,1,223,1107,226,677,224,1002,223,2,223,1005,224,599,1001,223,1,223,1008,226,226,224,1002,223,2,223,1005,224,614,101,1,223,223,107,226,226,224,102,2,223,223,1006,224,629,1001,223,1,223,1008,677,677,224,1002,223,2,223,1006,224,644,101,1,223,223,107,677,677,224,1002,223,2,223,1005,224,659,101,1,223,223,1108,677,226,224,1002,223,2,223,1006,224,674,1001,223,1,223,4,223,99,226";
    show d5p1 x;
    show d5p2 x;
    show d5p1whitebox x;
    show d5p2whitebox x;
    };

/d5p1whitebox x:"3,225,1,225,6,6,1100,1,238,225,104,0,1002,43,69,224,101,-483,224,224,4,224,1002,223,8,223,1001,224,5,224,1,224,223,223,1101,67,60,225,1102,5,59,225,1101,7,16,225,1102,49,72,225,101,93,39,224,101,-98,224,224,4,224,102,8,223,223,1001,224,6,224,1,224,223,223,1102,35,82,225,2,166,36,224,101,-4260,224,224,4,224,102,8,223,223,101,5,224,224,1,223,224,223,102,66,48,224,1001,224,-4752,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1001,73,20,224,1001,224,-55,224,4,224,102,8,223,223,101,7,224,224,1,223,224,223,1102,18,41,224,1001,224,-738,224,4,224,102,8,223,223,101,6,224,224,1,224,223,223,1101,68,71,225,1102,5,66,225,1101,27,5,225,1101,54,63,224,1001,224,-117,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1,170,174,224,101,-71,224,224,4,224,1002,223,8,223,1001,224,4,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1007,226,226,224,1002,223,2,223,1006,224,329,1001,223,1,223,1007,226,677,224,102,2,223,223,1006,224,344,1001,223,1,223,108,677,677,224,102,2,223,223,1005,224,359,1001,223,1,223,1007,677,677,224,1002,223,2,223,1006,224,374,101,1,223,223,8,677,226,224,1002,223,2,223,1006,224,389,101,1,223,223,7,226,226,224,1002,223,2,223,1005,224,404,101,1,223,223,7,677,226,224,102,2,223,223,1005,224,419,1001,223,1,223,8,226,677,224,1002,223,2,223,1005,224,434,101,1,223,223,1008,226,677,224,102,2,223,223,1006,224,449,1001,223,1,223,7,226,677,224,1002,223,2,223,1006,224,464,1001,223,1,223,108,677,226,224,102,2,223,223,1005,224,479,101,1,223,223,108,226,226,224,1002,223,2,223,1006,224,494,101,1,223,223,8,226,226,224,1002,223,2,223,1005,224,509,1001,223,1,223,1107,677,226,224,102,2,223,223,1005,224,524,1001,223,1,223,1107,226,226,224,102,2,223,223,1005,224,539,1001,223,1,223,1108,677,677,224,1002,223,2,223,1006,224,554,101,1,223,223,107,226,677,224,102,2,223,223,1005,224,569,1001,223,1,223,1108,226,677,224,1002,223,2,223,1005,224,584,1001,223,1,223,1107,226,677,224,1002,223,2,223,1005,224,599,1001,223,1,223,1008,226,226,224,1002,223,2,223,1005,224,614,101,1,223,223,107,226,226,224,102,2,223,223,1006,224,629,1001,223,1,223,1008,677,677,224,1002,223,2,223,1006,224,644,101,1,223,223,107,677,677,224,1002,223,2,223,1005,224,659,101,1,223,223,1108,677,226,224,1002,223,2,223,1006,224,674,1001,223,1,223,4,223,99,226"
/d5p1whitebox x:"3,225,1,225,6,6,1100,1,238,225,104,0,1,191,196,224,1001,224,-85,224,4,224,1002,223,8,223,1001,224,4,224,1,223,224,223,1101,45,50,225,1102,61,82,225,101,44,39,224,101,-105,224,224,4,224,102,8,223,223,101,5,224,224,1,224,223,223,102,14,187,224,101,-784,224,224,4,224,102,8,223,223,101,7,224,224,1,224,223,223,1001,184,31,224,1001,224,-118,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1102,91,18,225,2,35,110,224,101,-810,224,224,4,224,102,8,223,223,101,3,224,224,1,223,224,223,1101,76,71,224,1001,224,-147,224,4,224,102,8,223,223,101,2,224,224,1,224,223,223,1101,7,16,225,1102,71,76,224,101,-5396,224,224,4,224,1002,223,8,223,101,5,224,224,1,224,223,223,1101,72,87,225,1101,56,77,225,1102,70,31,225,1102,29,15,225,1002,158,14,224,1001,224,-224,224,4,224,102,8,223,223,101,1,224,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1007,226,226,224,1002,223,2,223,1006,224,329,1001,223,1,223,8,226,677,224,1002,223,2,223,1005,224,344,1001,223,1,223,107,226,677,224,1002,223,2,223,1006,224,359,1001,223,1,223,8,677,677,224,1002,223,2,223,1005,224,374,1001,223,1,223,1108,226,226,224,1002,223,2,223,1005,224,389,1001,223,1,223,7,677,226,224,1002,223,2,223,1005,224,404,101,1,223,223,7,226,226,224,102,2,223,223,1006,224,419,1001,223,1,223,1108,226,677,224,102,2,223,223,1005,224,434,1001,223,1,223,1107,226,226,224,1002,223,2,223,1006,224,449,1001,223,1,223,1007,677,677,224,102,2,223,223,1006,224,464,1001,223,1,223,107,226,226,224,1002,223,2,223,1005,224,479,101,1,223,223,1107,677,226,224,1002,223,2,223,1005,224,494,1001,223,1,223,1008,677,677,224,102,2,223,223,1005,224,509,101,1,223,223,107,677,677,224,102,2,223,223,1005,224,524,1001,223,1,223,1108,677,226,224,1002,223,2,223,1005,224,539,1001,223,1,223,7,226,677,224,102,2,223,223,1006,224,554,1001,223,1,223,8,677,226,224,1002,223,2,223,1006,224,569,101,1,223,223,108,226,226,224,1002,223,2,223,1006,224,584,1001,223,1,223,1107,226,677,224,1002,223,2,223,1006,224,599,101,1,223,223,1008,226,226,224,102,2,223,223,1005,224,614,1001,223,1,223,1007,226,677,224,1002,223,2,223,1006,224,629,1001,223,1,223,108,677,226,224,102,2,223,223,1005,224,644,101,1,223,223,1008,226,677,224,1002,223,2,223,1005,224,659,101,1,223,223,108,677,677,224,1002,223,2,223,1006,224,674,1001,223,1,223,4,223,99,226"
/d5p1whitebox x:"3,225,1,225,6,6,1100,1,238,225,104,0,1102,78,40,225,1102,52,43,224,1001,224,-2236,224,4,224,102,8,223,223,101,4,224,224,1,224,223,223,1,191,61,224,1001,224,-131,224,4,224,102,8,223,223,101,4,224,224,1,223,224,223,1101,86,74,225,1102,14,76,225,1101,73,83,224,101,-156,224,224,4,224,102,8,223,223,101,6,224,224,1,224,223,223,1102,43,82,225,2,196,13,224,101,-6162,224,224,4,224,102,8,223,223,101,5,224,224,1,223,224,223,1001,161,51,224,101,-70,224,224,4,224,102,8,223,223,1001,224,1,224,1,224,223,223,102,52,187,224,1001,224,-832,224,4,224,102,8,223,223,101,1,224,224,1,224,223,223,1102,19,79,225,101,65,92,224,1001,224,-147,224,4,224,1002,223,8,223,101,4,224,224,1,223,224,223,1102,16,90,225,1102,45,44,225,1102,92,79,225,1002,65,34,224,101,-476,224,224,4,224,102,8,223,223,1001,224,5,224,1,224,223,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,107,226,226,224,1002,223,2,223,1005,224,329,1001,223,1,223,1007,226,226,224,102,2,223,223,1005,224,344,101,1,223,223,1008,226,226,224,102,2,223,223,1005,224,359,1001,223,1,223,8,226,677,224,102,2,223,223,1006,224,374,101,1,223,223,1107,226,677,224,1002,223,2,223,1006,224,389,101,1,223,223,1108,226,677,224,102,2,223,223,1005,224,404,101,1,223,223,107,677,677,224,102,2,223,223,1006,224,419,1001,223,1,223,7,677,226,224,102,2,223,223,1005,224,434,101,1,223,223,1007,677,677,224,102,2,223,223,1005,224,449,1001,223,1,223,108,226,677,224,102,2,223,223,1005,224,464,1001,223,1,223,108,226,226,224,102,2,223,223,1006,224,479,101,1,223,223,107,226,677,224,102,2,223,223,1006,224,494,1001,223,1,223,7,226,226,224,1002,223,2,223,1006,224,509,101,1,223,223,1108,677,226,224,102,2,223,223,1005,224,524,101,1,223,223,1107,677,226,224,102,2,223,223,1005,224,539,101,1,223,223,1008,677,226,224,102,2,223,223,1005,224,554,101,1,223,223,1008,677,677,224,1002,223,2,223,1006,224,569,101,1,223,223,1107,677,677,224,102,2,223,223,1006,224,584,1001,223,1,223,1108,226,226,224,1002,223,2,223,1006,224,599,101,1,223,223,7,226,677,224,102,2,223,223,1006,224,614,101,1,223,223,108,677,677,224,1002,223,2,223,1006,224,629,101,1,223,223,1007,677,226,224,102,2,223,223,1006,224,644,101,1,223,223,8,677,677,224,1002,223,2,223,1006,224,659,101,1,223,223,8,677,226,224,102,2,223,223,1005,224,674,101,1,223,223,4,223,99,226"
/d5p1whitebox x:"3,225,1,225,6,6,1100,1,238,225,104,0,1,192,154,224,101,-161,224,224,4,224,102,8,223,223,101,5,224,224,1,223,224,223,1001,157,48,224,1001,224,-61,224,4,224,102,8,223,223,101,2,224,224,1,223,224,223,1102,15,28,225,1002,162,75,224,1001,224,-600,224,4,224,1002,223,8,223,1001,224,1,224,1,224,223,223,102,32,57,224,1001,224,-480,224,4,224,102,8,223,223,101,1,224,224,1,224,223,223,1101,6,23,225,1102,15,70,224,1001,224,-1050,224,4,224,1002,223,8,223,101,5,224,224,1,224,223,223,101,53,196,224,1001,224,-63,224,4,224,102,8,223,223,1001,224,3,224,1,224,223,223,1101,64,94,225,1102,13,23,225,1101,41,8,225,2,105,187,224,1001,224,-60,224,4,224,1002,223,8,223,101,6,224,224,1,224,223,223,1101,10,23,225,1101,16,67,225,1101,58,10,225,1101,25,34,224,1001,224,-59,224,4,224,1002,223,8,223,1001,224,3,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1108,226,226,224,102,2,223,223,1005,224,329,101,1,223,223,107,226,226,224,1002,223,2,223,1005,224,344,1001,223,1,223,107,677,226,224,102,2,223,223,1005,224,359,101,1,223,223,7,677,226,224,102,2,223,223,1005,224,374,101,1,223,223,108,226,226,224,102,2,223,223,1006,224,389,101,1,223,223,1007,677,677,224,102,2,223,223,1005,224,404,101,1,223,223,7,226,677,224,102,2,223,223,1006,224,419,101,1,223,223,1107,226,677,224,1002,223,2,223,1005,224,434,1001,223,1,223,1108,226,677,224,102,2,223,223,1005,224,449,101,1,223,223,108,226,677,224,102,2,223,223,1005,224,464,1001,223,1,223,8,226,677,224,1002,223,2,223,1005,224,479,1001,223,1,223,1007,226,226,224,102,2,223,223,1006,224,494,101,1,223,223,1008,226,677,224,102,2,223,223,1006,224,509,101,1,223,223,1107,677,226,224,1002,223,2,223,1006,224,524,1001,223,1,223,108,677,677,224,1002,223,2,223,1005,224,539,1001,223,1,223,1107,226,226,224,1002,223,2,223,1006,224,554,1001,223,1,223,7,226,226,224,1002,223,2,223,1006,224,569,1001,223,1,223,8,677,226,224,102,2,223,223,1006,224,584,101,1,223,223,1008,677,677,224,102,2,223,223,1005,224,599,101,1,223,223,1007,226,677,224,1002,223,2,223,1006,224,614,1001,223,1,223,8,677,677,224,1002,223,2,223,1005,224,629,101,1,223,223,107,677,677,224,102,2,223,223,1005,224,644,101,1,223,223,1108,677,226,224,102,2,223,223,1005,224,659,101,1,223,223,1008,226,226,224,102,2,223,223,1006,224,674,1001,223,1,223,4,223,99,226"
/d5p1whitebox x:"3,225,1,225,6,6,1100,1,238,225,104,0,1101,81,30,225,1102,9,63,225,1001,92,45,224,101,-83,224,224,4,224,102,8,223,223,101,2,224,224,1,224,223,223,1102,41,38,225,1002,165,73,224,101,-2920,224,224,4,224,102,8,223,223,101,4,224,224,1,223,224,223,1101,18,14,224,1001,224,-32,224,4,224,1002,223,8,223,101,3,224,224,1,224,223,223,1101,67,38,225,1102,54,62,224,1001,224,-3348,224,4,224,1002,223,8,223,1001,224,1,224,1,224,223,223,1,161,169,224,101,-62,224,224,4,224,1002,223,8,223,101,1,224,224,1,223,224,223,2,14,18,224,1001,224,-1890,224,4,224,1002,223,8,223,101,3,224,224,1,223,224,223,1101,20,25,225,1102,40,11,225,1102,42,58,225,101,76,217,224,101,-153,224,224,4,224,102,8,223,223,1001,224,5,224,1,224,223,223,102,11,43,224,1001,224,-451,224,4,224,1002,223,8,223,101,6,224,224,1,223,224,223,1102,77,23,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,8,226,677,224,1002,223,2,223,1006,224,329,1001,223,1,223,7,226,226,224,102,2,223,223,1006,224,344,101,1,223,223,108,677,677,224,1002,223,2,223,1006,224,359,101,1,223,223,1107,226,677,224,1002,223,2,223,1005,224,374,101,1,223,223,1008,677,226,224,1002,223,2,223,1005,224,389,101,1,223,223,1007,677,226,224,1002,223,2,223,1005,224,404,1001,223,1,223,1107,677,226,224,1002,223,2,223,1005,224,419,1001,223,1,223,108,677,226,224,102,2,223,223,1006,224,434,1001,223,1,223,7,226,677,224,102,2,223,223,1005,224,449,1001,223,1,223,107,226,226,224,102,2,223,223,1006,224,464,101,1,223,223,107,677,226,224,102,2,223,223,1006,224,479,101,1,223,223,1007,677,677,224,1002,223,2,223,1006,224,494,1001,223,1,223,1008,226,226,224,1002,223,2,223,1006,224,509,101,1,223,223,7,677,226,224,1002,223,2,223,1006,224,524,1001,223,1,223,1007,226,226,224,102,2,223,223,1006,224,539,101,1,223,223,8,677,226,224,1002,223,2,223,1006,224,554,101,1,223,223,1008,677,677,224,102,2,223,223,1006,224,569,101,1,223,223,1108,677,226,224,102,2,223,223,1005,224,584,101,1,223,223,107,677,677,224,102,2,223,223,1006,224,599,1001,223,1,223,1108,677,677,224,1002,223,2,223,1006,224,614,1001,223,1,223,1107,677,677,224,1002,223,2,223,1005,224,629,1001,223,1,223,108,226,226,224,1002,223,2,223,1005,224,644,101,1,223,223,8,226,226,224,1002,223,2,223,1005,224,659,101,1,223,223,1108,226,677,224,1002,223,2,223,1006,224,674,101,1,223,223,4,223,99,226"

/
OVERVIEW:

This is a vast expansion over the intcode interpreter from day 2.
We add an input list as a parameter together with the program. During simulation we
track the tape pointer (tp) that is incremented on every input instruction. This
is more efficient than cutting the list every time. On the other hand, output can
be appended relatively quickly. Addressing modes are handled by extracting the
relevant digits from the opcode by dividing by 100, 1000 and 10000, then mod'ing the
result by 10. Lots of new opcodes are added and the existing ones are enhanced to
be able to handle indirect and immediate addressing. There is a slight difference
in the handling of input versus output parameters. Input parameters are either read
from a memory location or copied verbatim. Output parameters should not be read out,
so in the implementation of each opcode, the output is taken from the arguments as
they appear in the code (argv0) instead of the resolved values (argv).

Part 1 and 2 are only different in what number appears on the input tape.

WHITEBOXING:
PART 1:
The answer is calculated in the form {y+8*x}/[5 6 5 2 7 6 2 4] with different numbers
for each input. The numbers can be found by pattern matching the code. The answer
is calculated in [223], with each "digit" stored in [224] just before the addition.
Therefore there will be a total of 8 ADD [223],[224],[223] and ADD [224],[223],[223]
instructions that build up the answer. The output must be [223] so first we search
for every 223 in the input:
q)ind:where a=223
q)ind
23 25 32 33 62 63 70 71 88 89 95 97 110 111 117 119 132 133 139 141 154 155 1..
Then we also fetch the two previous numbers for each found index:
q)a(ind:where a=223)-\:1 2
1002 224
8    223
224  1
223  224
8    102
223  8
224  1
223  224
..

The two read arguments can either be 223,224 or 224,223. We put each row in ascending
order before filtering:
q)asc each a(ind:where a=223)-\:1 2
224 1002
8   223
1   224
223 224
8   102
8   223
1   224
223 224
...

Then we find which rows exactly match the list 223 224. There will be exactly 8 of
those.
q)223 224~/:asc each a(ind:where a=223)-\:1 2
00010001000100010001000100010001000000000000000000000000000000000000000000000..
q)ind where 223 224~/:asc each a(ind:where a=223)-\:1 2
33 71 97 119 141 163 197 219

Now we have to check the previous instruction for the number that gets added. It
will be either an ADD x,[224],[224] or an ADD [224],x,[224] instruction. So from the
initial 223 we found, we have to step either 5 or 6 steps back to find our digits:
q)-5 -6+/:ind where 223 224~/:asc each a(ind:where a=223)-\:1 2
28  27
66  65
92  91
114 113
136 135
158 157
192 191
214 213
q)a -5 -6+/:ind where 223 224~/:asc each a(ind:where a=223)-\:1 2
5   224
6   224
224 5
2   224
224 7
224 6
2   224
4   224

We now have to drop the 224's to keep only the useful digits.
q)(a -5 -6+/:ind where 223 224~/:asc each a(ind:where a=223)-\:1 2)except\:224
5
6
5
2
7
6
2
4

But they are still in single-element lists so we raze them:
q)raze(a -5 -6+/:ind where 223 224~/:asc each a(ind:where a=223)-\:1 2)except\:224
5 6 5 2 7 6 2 4

Finally we put them together into the answer. We use the / iterator here since this
is only a repetition of multiply by 8 and add the next digit. This step can be
expressed using the function {y+8*x}. Let's see what we happens if we use this with
/ on the digits:
q){y+8*x}/[raze(a -5 -6+/:ind where 223 224~/:asc each a(ind:where a=223)-\:1 2)except\:224]
12234644

Which is exactly the answer produced by running the full program.

PART 2:
This time the answer is built up from 24 binary digits. The code seems to check
various possibilities for the LT and EQ instruction. There are 32 possible checks:
LT vs EQ, two addressing modes for each argument, and the numerical value of each
argument. The latter is either 226 or 677. [226] contains 677 and [677] contains 226.
Of the 32 checks, only 24 are present in a seemingly random combination and order.
Furthermore after each check there is either a JZ or JNZ instruction. So depending
on this we have to invert the result of the check to get the corresponding digit.
Since there are only a handful of possibilites, we can make a lookup table:

    t:enlist[`long$()]!enlist 0N;
    t[7 226 226]:0;t[7 226 677]:0;t[7 677 226]:1;t[7 677 677]:0;
    t[107 226 226]:1;t[107 226 677]:0;t[107 677 226]:0;t[107 677 677]:0;
    t[1007 226 226]:0;t[1007 226 677]:0;t[1007 677 226]:0;t[1007 677 677]:1;
    t[1107 226 226]:0;t[1107 226 677]:1;t[1107 677 226]:0;t[1107 677 677]:0;
    t[8 226 226]:1;t[8 226 677]:0;t[8 677 226]:0;t[8 677 677]:1;
    t[108 226 226]:0;t[108 226 677]:1;t[108 677 226]:1;t[108 677 677]:0;
    t[1008 226 226]:0;t[1008 226 677]:1;t[1008 677 226]:1;t[1008 677 677]:0;
    t[1108 226 226]:1;t[1108 226 677]:0;t[1108 677 226]:0;t[1108 677 677]:1;

Just like before, we use pattern matching to find the interesting instructions.
We start by searching for 224, where the result of the comparison is stored:
q)ind:where a=224
q)ind
15 18 19 21 27 29 31 53 56 57 59 65 67 69 79 82 83 85 92 93 96..

Using the same method as above, we filter out where the previous two numbers are
226 or 667 (in any combination):
q)(a(ind:where a=224)-\:1 2)
69    43
-483  101
224   -483
4     224
1001  223
5     224
1     224
39    93
-98   101
224   -98
4     224
1001  223
6     224
..
q)(a(ind:where a=224)-\:1 2) in 226 677
..
00b
00b
00b
11b
00b
11b
00b
11b
..
11b
00b
11b
00b
11b
00b
11b
00b
11b
..
q)all each (a(ind:where a=224)-\:1 2) in 226 677
00000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010b
q)ind2:ind where all each (a(ind:where a=224)-\:1 2) in 226 677;
q)ind2
317 332 347 362 377 392 407 422 437 452 467 482 497 512 527 542 557 572 587 602 617 632 647 662

Then we look back to the last 3 numbers, including the instruction:
q)a -3 -2 -1+/:ind2
1007 226 226
1007 226 677
108  677 677
1007 677 677
8    677 226
7    226 226
..

We use the lookup table to cheat at finding the solution:
q)t a -3 -2 -1+/:ind2
0 0 0 1 0 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 1 0 0 0

Then we look forward to whether there is a JNZ or JZ at the relevant point:
q)a 5+ind2
1006 1006 1005 1006 1006 1005 1005 1005 1006 1006 1005 1006 1005 1005 1005 1006 1005 1005 1005 1005 1006 1006 1005 1006

q)(1005=a 5+ind2)
001001110010111011110010b

We invert the result where this doesn't match up with the previous result (in the
second result true means a JNZ, therefore we skip adding the digit if the comparison
was true).

q)(t a -3 -2 -1+/:ind2)<>(1005=a 5+ind2)
001101011000011111011010b

Finally we add up the digits like before, using 2 as the multiplier this time:
q){y+2*x}/[(t a -3 -2 -1+/:ind2)<>(1005=a 5+ind2)]
3508186
